pipeline{
    agent any
    environment {
        // DOCKERHUB_USERNAME= 'bopgeek'
        APP_NAME = 'pythonargocd'
        // IMAGE_TAG =  "${BUILD_NUMBER}"
        // IMAGE_NAME = "${DOCKERHUB_USERNAME}" + "/" +'${APP_NAME}'
        // REGISTRY_CREDS = 'dockerhub'
    }
    stages{
        stage("cleaning the workspace"){
            steps{
                echo "====++++executing cleaning the workspace++++===="
                script{
                    cleanWs()
                }
            }
            post{
                success{
                    echo "====++++cleaning the workspace executed successfully++++===="
                }
                failure{
                    echo "====++++cleaning the workspace execution failed++++===="
                }
        
            }
        }
        stage("git repo checkout"){
            steps{
                echo "====++++git repo checkout++++===="
                script{
                    git branch: 'master', 
                    credentialsId: 'github-access-tokon', 
                    url: 'https://github.com/njokuifeanyigerald/python-CI-CD-with-Jenkins-and-ArgoCD.git'
                }
                
            }   
            post{
                success{
                    echo "========git repo checkout executed successfully========"
                }
                failure{
                    echo "========git repo checkout execution failed========"
                }
            }
        }
        stage("build docker image"){
            steps{
                echo "====++++executing build docker image++++===="

                script{
                    sh "docker image build -t $APP_NAME:$BUILD_ID ."
                    sh "docker image tag $APP_NAME:$BUILD_ID bopgeek/$APP_NAME:$BUILD_ID"
                    sh "docker image tag $APP_NAME:$BUILD_ID bopgeek/$APP_NAME:latest"
                }
                  
                }
            
            post{
                success{
                    echo "====++++build docker image executed successfully++++===="
                }
                failure{
                    echo "====++++build docker image execution failed++++===="
                }
        
            }
        }
        stage("docker push"){
            steps{
                echo "====++++executing docker push++++===="
                script{

                    withCredentials([string(credentialsId: 'dockerhub_pwd', variable: 'dockerhub_cred')]) {
                        // some block
                        sh """
                        docker login -u bopgeek -p ${dockerhub_cred}
                        docker image push bopgeek/$APP_NAME:$BUILD_ID
                        docker image push bopgeek/$APP_NAME:latest
                        """
                    }
                }
            }
            post{
                success{
                    echo "====++++docker push executed successfully++++===="
                }
                failure{
                    echo "====++++docker push execution failed++++===="
                }
        
            }
        }
        stage("delete docker image in local machine"){
            steps{
                echo "====++++executing delete docker image in local machine++++===="
                script{
                    sh """
                    docker rmi -f bopgeek/$APP_NAME:$BUILD_ID
                    docker rmi -f bopgeek/$APP_NAME:latest
                    """
                }
            }
            post{
                success{
                    echo "====++++delete docker image in local machine executed successfully++++===="
                }
                failure{
                    echo "====++++delete docker image in local machine execution failed++++===="
                }
        
            }
        }
        stage("updating k8s deployment file"){
            steps{
                echo "====++++executing updating k8s deployment file++++===="
                // if any image part of the manifest matches the app name, it should
                //  update the app name and its version using build number
                script{
                    sh """
                        cat deployment.yaml
                        sed -i 's/${APP_NAME}.*/${APP_NAME}:$BUILD_ID/g' deployment.yaml
                    """
                }
            }
            post{
                success{
                    echo "====++++updating k8s deployment file executed successfully++++===="
                }
                failure{
                    echo "====++++updating k8s deployment file execution failed++++===="
                }
        
            }
        }
    }
    post{
        success{
            echo "========pipeline executed successfully ========"
        }
        failure{
            echo "========pipeline execution failed========"
        }
    }
}
