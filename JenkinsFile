pipeline{
    agent any
    // environment {
    //     DOCKERHUB_USERNAME= 'bopgeek'
    //     APP_NAME = 'flaskargocd'
    //     IMAGE_TAG =  "${BUILD_NUMBER}"
    //     IMAGE_NAME = "${DOCKERHUB_USERNAME}" + "/" +'${APP_NAME}'
    //     REGISTRY_CREDS = 'dockerhub'
    // }
    stages{
        stage("cleaning the workspace"){
            steps{
                echo "====++++executing cleaning the workspace++++===="
                script{
                    cleanWs()
                }
            }
            post{
                success{
                    echo "====++++cleaning the workspace executed successfully++++===="
                }
                failure{
                    echo "====++++cleaning the workspace execution failed++++===="
                }
        
            }
        }
        stage("git repo checkout"){
            steps{
                echo "====++++git repo checkout++++===="
                script{
                    git branch: 'master', 
                    credentialsId: 'github-access-tokon', 
                    url: 'https://github.com/njokuifeanyigerald/python-CI-CD-with-Jenkins-and-ArgoCD.git'
                }
                
            }   
            post{
                success{
                    echo "========git repo checkout executed successfully========"
                }
                failure{
                    echo "========git repo checkout execution failed========"
                }
            }
        }
        stage("build docker image"){
            steps{
                echo "====++++executing build docker image++++===="

                script{
                    sh "docker image build -t $pythonargocd:$BUILD_ID ."
                    sh "docker image tag $JOB_NAME:$BUILD_ID bopgeek/$pythonargocd:$BUILD_ID"
                    sh "docker image tag $JOB_NAME:$BUILD_ID bopgeek/$pythonargocd:latest"
                }
                  
                }
            
            post{
                success{
                    echo "====++++build docker image executed successfully++++===="
                }
                failure{
                    echo "====++++build docker image execution failed++++===="
                }
        
            }
        }
        // stage("docker push"){
        //     steps{
        //         echo "====++++executing docker push++++===="
        //         script{

        //             withCredentials([string(credentialsId: 'dockerhub_pwd', variable: 'dockerhub_cred')]) {
        //                 // some block
        //                 sh 'docker login -u bopgeek -p ${dockerhub_cred}'
        //                 sh 'docker image push ${IMAGE_NAME}:$BUILD_ID'
        //                 sh 'docker image push ${IMAGE_NAME}:latest'
        //             }
        //         }
        //     }
        //     post{
        //         success{
        //             echo "====++++docker push executed successfully++++===="
        //         }
        //         failure{
        //             echo "====++++docker push execution failed++++===="
        //         }
        
        //     }
        // }
    }
    post{
        success{
            echo "========pipeline executed successfully ========"
        }
        failure{
            echo "========pipeline execution failed========"
        }
    }
}
